version: '3'

services:
  # Service principal pour la simulation ROS 2 + Gazebo
  ros_gazebo:
    image: picar_simulator:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: picar_simulator_ros_gazebo
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./ros2_ws:/home/ros/ros2_ws
      - ./scenarios:/home/ros/scenarios
    ports:
      - "8080:8080"  # Interface web
      - "9090:9090"  # Bridge ROS-Unreal
    networks:
      - picar_net
    command: bash -c "source /opt/ros/humble/setup.bash && source /home/ros/ros2_ws/install/setup.bash && ros2 launch picar_simulator picar_simulator.launch.py use_unreal:=true"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Service pour Unreal Engine (optionnel, peut être exécuté séparément)
  unreal:
    image: picar_simulator_unreal:latest
    build:
      context: ./unreal_project
      dockerfile: Dockerfile.unreal
    container_name: picar_simulator_unreal
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    ports:
      - "9090:9090"  # Bridge ROS-Unreal
    networks:
      - picar_net
    depends_on:
      - ros_gazebo
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Service pour l'interface web (peut être séparé pour le développement)
  web_interface:
    image: picar_simulator_web:latest
    build:
      context: ./web_interface
      dockerfile: Dockerfile.web
    container_name: picar_simulator_web
    ports:
      - "8080:8080"  # Interface web
    networks:
      - picar_net
    depends_on:
      - ros_gazebo
    volumes:
      - ./web_interface:/app
    command: python3 /app/web_interface.py

  # Service pour le développement (avec outils de développement)
  dev:
    image: picar_simulator_dev:latest
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: picar_simulator_dev
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./:/home/ros/workspace
    ports:
      - "8888:8888"  # Jupyter Notebook
    networks:
      - picar_net
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root

networks:
  picar_net:
    driver: bridge